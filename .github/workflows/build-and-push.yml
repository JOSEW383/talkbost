name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  tag-version:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      new-tag: ${{ steps.tag.outputs.new-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: latest
        run: |
          latest_tag=$(git describe --tags --abbrev=0 --match="v*" 2>/dev/null || echo "v0")
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Increment version
        id: tag
        run: |
          latest="${{ steps.latest.outputs.latest_tag }}"
          # Remove 'v' prefix
          version="${latest#v}"
          # Increment version
          new_version=$((version + 1))
          new_tag="v$new_version"
          echo "new-tag=$new_tag" >> $GITHUB_OUTPUT
          echo "New version: $new_tag"

      - name: Create and push tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag "${{ steps.tag.outputs.new-tag }}"
          git push origin "${{ steps.tag.outputs.new-tag }}"

  build-and-push:
    needs: tag-version
    if: always() && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: true

      - name: Set lowercase repo owner
        id: vars
        run: echo "repo_owner_lower=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Determine tag
        id: tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ needs.tag-version.outputs.new-tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push admin-panel image
        uses: docker/build-push-action@v5
        with:
          context: ./admin-panel
          push: true
          tags: ghcr.io/${{ steps.vars.outputs.repo_owner_lower }}/talkbost:${{ steps.tag.outputs.tag }}-admin-panel

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ghcr.io/${{ steps.vars.outputs.repo_owner_lower }}/talkbost:${{ steps.tag.outputs.tag }}-backend

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ghcr.io/${{ steps.vars.outputs.repo_owner_lower }}/talkbost:${{ steps.tag.outputs.tag }}-frontend
